function cov_yc3atzjj5(){var path="/home/manuel/Desktop/ProyIntegral/app/controllers/records.controller.js";var hash="12c21bd3bacd0288acef5c9509c2423fbc4c9bb6";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/manuel/Desktop/ProyIntegral/app/controllers/records.controller.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:31}},"1":{start:{line:2,column:15},end:{line:2,column:25}},"2":{start:{line:3,column:11},end:{line:3,column:26}},"3":{start:{line:6,column:0},end:{line:42,column:2}},"4":{start:{line:8,column:2},end:{line:8,column:24}},"5":{start:{line:9,column:2},end:{line:15,column:3}},"6":{start:{line:11,column:4},end:{line:13,column:7}},"7":{start:{line:14,column:4},end:{line:14,column:11}},"8":{start:{line:17,column:2},end:{line:24,column:3}},"9":{start:{line:18,column:16},end:{line:18,column:44}},"10":{start:{line:20,column:4},end:{line:22,column:7}},"11":{start:{line:23,column:4},end:{line:23,column:11}},"12":{start:{line:27,column:17},end:{line:32,column:3}},"13":{start:{line:35,column:2},end:{line:41,column:5}},"14":{start:{line:36,column:4},end:{line:36,column:19}},"15":{start:{line:38,column:4},end:{line:40,column:7}},"16":{start:{line:45,column:0},end:{line:57,column:2}},"17":{start:{line:46,column:17},end:{line:46,column:33}},"18":{start:{line:48,column:18},end:{line:48,column:36}},"19":{start:{line:50,column:2},end:{line:56,column:5}},"20":{start:{line:51,column:4},end:{line:51,column:19}},"21":{start:{line:53,column:4},end:{line:55,column:7}},"22":{start:{line:60,column:0},end:{line:70,column:2}},"23":{start:{line:61,column:13},end:{line:61,column:26}},"24":{start:{line:63,column:2},end:{line:69,column:5}},"25":{start:{line:64,column:4},end:{line:64,column:19}},"26":{start:{line:66,column:4},end:{line:68,column:7}},"27":{start:{line:73,column:0},end:{line:93,column:2}},"28":{start:{line:74,column:13},end:{line:74,column:24}},"29":{start:{line:76,column:2},end:{line:92,column:5}},"30":{start:{line:79,column:4},end:{line:87,column:5}},"31":{start:{line:80,column:6},end:{line:82,column:9}},"32":{start:{line:84,column:6},end:{line:86,column:9}},"33":{start:{line:89,column:4},end:{line:91,column:7}},"34":{start:{line:96,column:0},end:{line:119,column:2}},"35":{start:{line:97,column:2},end:{line:97,column:19}},"36":{start:{line:98,column:13},end:{line:98,column:24}},"37":{start:{line:100,column:2},end:{line:118,column:5}},"38":{start:{line:103,column:4},end:{line:113,column:5}},"39":{start:{line:104,column:6},end:{line:107,column:9}},"40":{start:{line:109,column:6},end:{line:109,column:23}},"41":{start:{line:110,column:6},end:{line:112,column:9}},"42":{start:{line:115,column:4},end:{line:117,column:7}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:17},end:{line:6,column:18}},loc:{start:{line:6,column:31},end:{line:42,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:35,column:29},end:{line:35,column:30}},loc:{start:{line:35,column:37},end:{line:37,column:3}},line:35},"2":{name:"(anonymous_2)",decl:{start:{line:37,column:11},end:{line:37,column:12}},loc:{start:{line:37,column:18},end:{line:41,column:3}},line:37},"3":{name:"(anonymous_3)",decl:{start:{line:45,column:18},end:{line:45,column:19}},loc:{start:{line:45,column:32},end:{line:57,column:1}},line:45},"4":{name:"(anonymous_4)",decl:{start:{line:50,column:44},end:{line:50,column:45}},loc:{start:{line:50,column:52},end:{line:52,column:3}},line:50},"5":{name:"(anonymous_5)",decl:{start:{line:52,column:11},end:{line:52,column:12}},loc:{start:{line:52,column:18},end:{line:56,column:3}},line:52},"6":{name:"(anonymous_6)",decl:{start:{line:60,column:18},end:{line:60,column:19}},loc:{start:{line:60,column:32},end:{line:70,column:1}},line:60},"7":{name:"(anonymous_7)",decl:{start:{line:63,column:27},end:{line:63,column:28}},loc:{start:{line:63,column:35},end:{line:65,column:3}},line:63},"8":{name:"(anonymous_8)",decl:{start:{line:65,column:11},end:{line:65,column:12}},loc:{start:{line:65,column:18},end:{line:69,column:3}},line:65},"9":{name:"(anonymous_9)",decl:{start:{line:73,column:17},end:{line:73,column:18}},loc:{start:{line:73,column:31},end:{line:93,column:1}},line:73},"10":{name:"(anonymous_10)",decl:{start:{line:78,column:10},end:{line:78,column:11}},loc:{start:{line:78,column:17},end:{line:88,column:3}},line:78},"11":{name:"(anonymous_11)",decl:{start:{line:88,column:11},end:{line:88,column:12}},loc:{start:{line:88,column:18},end:{line:92,column:3}},line:88},"12":{name:"(anonymous_12)",decl:{start:{line:96,column:17},end:{line:96,column:18}},loc:{start:{line:96,column:31},end:{line:119,column:1}},line:96},"13":{name:"(anonymous_13)",decl:{start:{line:102,column:10},end:{line:102,column:11}},loc:{start:{line:102,column:17},end:{line:114,column:3}},line:102},"14":{name:"(anonymous_14)",decl:{start:{line:114,column:11},end:{line:114,column:12}},loc:{start:{line:114,column:18},end:{line:118,column:3}},line:114}},branchMap:{"0":{loc:{start:{line:9,column:2},end:{line:15,column:3}},type:"if",locations:[{start:{line:9,column:2},end:{line:15,column:3}},{start:{line:9,column:2},end:{line:15,column:3}}],line:9},"1":{loc:{start:{line:9,column:6},end:{line:9,column:91}},type:"binary-expr",locations:[{start:{line:9,column:6},end:{line:9,column:24}},{start:{line:9,column:28},end:{line:9,column:48}},{start:{line:9,column:52},end:{line:9,column:71}},{start:{line:9,column:75},end:{line:9,column:91}}],line:9},"2":{loc:{start:{line:39,column:15},end:{line:39,column:64}},type:"binary-expr",locations:[{start:{line:39,column:15},end:{line:39,column:26}},{start:{line:39,column:30},end:{line:39,column:64}}],line:39},"3":{loc:{start:{line:54,column:15},end:{line:54,column:63}},type:"binary-expr",locations:[{start:{line:54,column:15},end:{line:54,column:26}},{start:{line:54,column:30},end:{line:54,column:63}}],line:54},"4":{loc:{start:{line:79,column:4},end:{line:87,column:5}},type:"if",locations:[{start:{line:79,column:4},end:{line:87,column:5}},{start:{line:79,column:4},end:{line:87,column:5}}],line:79},"5":{loc:{start:{line:103,column:4},end:{line:113,column:5}},type:"if",locations:[{start:{line:103,column:4},end:{line:113,column:5}},{start:{line:103,column:4},end:{line:113,column:5}}],line:103}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0],"1":[0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},inputSourceMap:{version:3,sources:["records.controller.js"],names:["db","require","Record","records","Op","Sequelize","exports","create","req","res","console","log","body","foodName","gramAmount","dateEaten","userID","status","send","message","aDate","Date","err","record","parseInt","then","data","catch","findAll","query","condition","where","findOne","id","params","findByPk","update","num","delete","destroy","deletedRecordID"],mappings:"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",file:"records.controller.js",sourceRoot:"/home/manuel/Desktop/ProyIntegral/app/controllers",sourcesContent:["const db = require(\"../models\");\nconst Record = db.records;\nconst Op = db.Sequelize.Op;\n\n// Create and Save a new Record\nexports.create = (req, res) => {\n   // Validate request\n   console.log(req.body);\n   if (!req.body.foodName || !req.body.gramAmount || !req.body.dateEaten || !req.body.userID ) {\n    \n    res.status(400).send({\n      message: \"Content can not be empty!\"\n    });\n    return;\n  }\n    //Check date format\n    try{\n      let aDate = new Date(req.body.dateEaten);\n    }\n    catch (err){\n      res.status(400).send({\n        message: \"Bad Date Format\"\n      });\n      return;\n    };\n\n  // Create a Record\n  const record = {\n    foodName: req.body.foodName,\n    gramAmount: parseInt(req.body.gramAmount),\n    userID: parseInt(req.body.userID),\n    dateEaten: new Date(req.body.dateEaten),\n  };\n\n  // Save Record in the database\n  Record.create(record)\n    .then(data => {\n      res.send(data);\n    })\n    .catch(err => {\n      res.status(500).send({\n        message:\n          err.message || \"Error while creating new Record.\"\n      });\n    });\n};\n\n// Retrieve all Records from the database. CAMBIAR PARA HACER UN RETRIEVE SEGUN UN USERID\nexports.findAll = (req, res) => {\n    const userID = req.query.userID;\n    //console.log(req);\n    var condition = {userID: userID};\n  \n    Record.findAll({ where: condition })\n      .then(data => {\n        res.send(data);\n      })\n      .catch(err => {\n        res.status(500).send({\n          message:\n            err.message || \"Error while retrieving Records.\"\n        });\n      });\n};\n\n// Find a single Record with an id\nexports.findOne = (req, res) => {\n    const id = req.params.id;\n\n    Record.findByPk(id)\n      .then(data => {\n        res.send(data);\n      })\n      .catch(err => {\n        res.status(500).send({\n          message: \"Error retrieving Record with id=\" + id\n        });\n      });\n};\n\n// Update a Record by the id in the request\nexports.update = (req, res) => {\n    const id = req.body.id;\n\n    Record.update(req.body, {\n      where: { id: id }\n    })\n      .then(num => {\n        if (num == 1) {\n          res.send({\n            message: \"Record was updated successfully.\"\n          });\n        } else {\n          res.send({\n            message: `Cannot update Record with id=${id}. Maybe Record was not found or req.body is empty!`\n          });\n        }\n      })\n      .catch(err => {\n        res.status(500).send({\n          message: \"Error updating Record with id=\" + id\n        });\n      });\n};\n\n// Delete a Record with the specified id in the request\nexports.delete = (req, res) => {\n    console.log(req);\n    const id = req.body.id;\n\n    Record.destroy({\n      where: { id: id }\n    })\n      .then(num => {\n        if (num == 1) {\n          res.send({\n            message: \"Record was deleted successfully!\",\n            deletedRecordID: id,\n          });\n        } else {\n          console.log(num);\n          res.send({\n            message: `Cannot delete Record with id=${id}. Maybe Record was not found!`\n          });\n        }\n      })\n      .catch(err => {\n        res.status(500).send({\n          message: \"Could not delete User with id=\" + id\n        });\n      });\n};\n\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"12c21bd3bacd0288acef5c9509c2423fbc4c9bb6"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_yc3atzjj5=function(){return actualCoverage;};}return actualCoverage;}cov_yc3atzjj5();const db=(cov_yc3atzjj5().s[0]++,require("../models"));const Record=(cov_yc3atzjj5().s[1]++,db.records);const Op=(cov_yc3atzjj5().s[2]++,db.Sequelize.Op);// Create and Save a new Record
cov_yc3atzjj5().s[3]++;exports.create=(req,res)=>{cov_yc3atzjj5().f[0]++;cov_yc3atzjj5().s[4]++;// Validate request
console.log(req.body);cov_yc3atzjj5().s[5]++;if((cov_yc3atzjj5().b[1][0]++,!req.body.foodName)||(cov_yc3atzjj5().b[1][1]++,!req.body.gramAmount)||(cov_yc3atzjj5().b[1][2]++,!req.body.dateEaten)||(cov_yc3atzjj5().b[1][3]++,!req.body.userID)){cov_yc3atzjj5().b[0][0]++;cov_yc3atzjj5().s[6]++;res.status(400).send({message:"Content can not be empty!"});cov_yc3atzjj5().s[7]++;return;}else{cov_yc3atzjj5().b[0][1]++;}//Check date format
cov_yc3atzjj5().s[8]++;try{let aDate=(cov_yc3atzjj5().s[9]++,new Date(req.body.dateEaten));}catch(err){cov_yc3atzjj5().s[10]++;res.status(400).send({message:"Bad Date Format"});cov_yc3atzjj5().s[11]++;return;};// Create a Record
const record=(cov_yc3atzjj5().s[12]++,{foodName:req.body.foodName,gramAmount:parseInt(req.body.gramAmount),userID:parseInt(req.body.userID),dateEaten:new Date(req.body.dateEaten)});// Save Record in the database
cov_yc3atzjj5().s[13]++;Record.create(record).then(data=>{cov_yc3atzjj5().f[1]++;cov_yc3atzjj5().s[14]++;res.send(data);}).catch(err=>{cov_yc3atzjj5().f[2]++;cov_yc3atzjj5().s[15]++;res.status(500).send({message:(cov_yc3atzjj5().b[2][0]++,err.message)||(cov_yc3atzjj5().b[2][1]++,"Error while creating new Record.")});});};// Retrieve all Records from the database. CAMBIAR PARA HACER UN RETRIEVE SEGUN UN USERID
cov_yc3atzjj5().s[16]++;exports.findAll=(req,res)=>{cov_yc3atzjj5().f[3]++;const userID=(cov_yc3atzjj5().s[17]++,req.query.userID);//console.log(req);
var condition=(cov_yc3atzjj5().s[18]++,{userID:userID});cov_yc3atzjj5().s[19]++;Record.findAll({where:condition}).then(data=>{cov_yc3atzjj5().f[4]++;cov_yc3atzjj5().s[20]++;res.send(data);}).catch(err=>{cov_yc3atzjj5().f[5]++;cov_yc3atzjj5().s[21]++;res.status(500).send({message:(cov_yc3atzjj5().b[3][0]++,err.message)||(cov_yc3atzjj5().b[3][1]++,"Error while retrieving Records.")});});};// Find a single Record with an id
cov_yc3atzjj5().s[22]++;exports.findOne=(req,res)=>{cov_yc3atzjj5().f[6]++;const id=(cov_yc3atzjj5().s[23]++,req.params.id);cov_yc3atzjj5().s[24]++;Record.findByPk(id).then(data=>{cov_yc3atzjj5().f[7]++;cov_yc3atzjj5().s[25]++;res.send(data);}).catch(err=>{cov_yc3atzjj5().f[8]++;cov_yc3atzjj5().s[26]++;res.status(500).send({message:"Error retrieving Record with id="+id});});};// Update a Record by the id in the request
cov_yc3atzjj5().s[27]++;exports.update=(req,res)=>{cov_yc3atzjj5().f[9]++;const id=(cov_yc3atzjj5().s[28]++,req.body.id);cov_yc3atzjj5().s[29]++;Record.update(req.body,{where:{id:id}}).then(num=>{cov_yc3atzjj5().f[10]++;cov_yc3atzjj5().s[30]++;if(num==1){cov_yc3atzjj5().b[4][0]++;cov_yc3atzjj5().s[31]++;res.send({message:"Record was updated successfully."});}else{cov_yc3atzjj5().b[4][1]++;cov_yc3atzjj5().s[32]++;res.send({message:`Cannot update Record with id=${id}. Maybe Record was not found or req.body is empty!`});}}).catch(err=>{cov_yc3atzjj5().f[11]++;cov_yc3atzjj5().s[33]++;res.status(500).send({message:"Error updating Record with id="+id});});};// Delete a Record with the specified id in the request
cov_yc3atzjj5().s[34]++;exports.delete=(req,res)=>{cov_yc3atzjj5().f[12]++;cov_yc3atzjj5().s[35]++;console.log(req);const id=(cov_yc3atzjj5().s[36]++,req.body.id);cov_yc3atzjj5().s[37]++;Record.destroy({where:{id:id}}).then(num=>{cov_yc3atzjj5().f[13]++;cov_yc3atzjj5().s[38]++;if(num==1){cov_yc3atzjj5().b[5][0]++;cov_yc3atzjj5().s[39]++;res.send({message:"Record was deleted successfully!",deletedRecordID:id});}else{cov_yc3atzjj5().b[5][1]++;cov_yc3atzjj5().s[40]++;console.log(num);cov_yc3atzjj5().s[41]++;res.send({message:`Cannot delete Record with id=${id}. Maybe Record was not found!`});}}).catch(err=>{cov_yc3atzjj5().f[14]++;cov_yc3atzjj5().s[42]++;res.status(500).send({message:"Could not delete User with id="+id});});};//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,