function cov_1oswnuiqra(){var path="/home/manuel/Desktop/ProyIntegral/app/controllers/foods.controller.js";var hash="cce17af6e8ae4a5e54681c7e0117830373cd094d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/manuel/Desktop/ProyIntegral/app/controllers/foods.controller.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:31}},"1":{start:{line:2,column:13},end:{line:2,column:21}},"2":{start:{line:3,column:11},end:{line:3,column:26}},"3":{start:{line:6,column:0},end:{line:28,column:2}},"4":{start:{line:8,column:2},end:{line:13,column:3}},"5":{start:{line:9,column:4},end:{line:11,column:7}},"6":{start:{line:12,column:4},end:{line:12,column:11}},"7":{start:{line:16,column:15},end:{line:18,column:3}},"8":{start:{line:21,column:2},end:{line:27,column:5}},"9":{start:{line:22,column:4},end:{line:22,column:19}},"10":{start:{line:24,column:4},end:{line:26,column:7}},"11":{start:{line:31,column:0},end:{line:42,column:2}},"12":{start:{line:32,column:15},end:{line:32,column:29}},"13":{start:{line:33,column:18},end:{line:33,column:69}},"14":{start:{line:35,column:2},end:{line:41,column:5}},"15":{start:{line:36,column:4},end:{line:36,column:19}},"16":{start:{line:38,column:4},end:{line:40,column:7}},"17":{start:{line:45,column:0},end:{line:55,column:2}},"18":{start:{line:46,column:13},end:{line:46,column:24}},"19":{start:{line:48,column:2},end:{line:54,column:5}},"20":{start:{line:49,column:4},end:{line:49,column:19}},"21":{start:{line:51,column:4},end:{line:53,column:7}},"22":{start:{line:58,column:0},end:{line:78,column:2}},"23":{start:{line:59,column:13},end:{line:59,column:24}},"24":{start:{line:61,column:2},end:{line:77,column:5}},"25":{start:{line:64,column:4},end:{line:72,column:5}},"26":{start:{line:65,column:6},end:{line:67,column:9}},"27":{start:{line:69,column:6},end:{line:71,column:9}},"28":{start:{line:74,column:4},end:{line:76,column:7}},"29":{start:{line:81,column:0},end:{line:101,column:2}},"30":{start:{line:82,column:13},end:{line:82,column:24}},"31":{start:{line:84,column:2},end:{line:100,column:5}},"32":{start:{line:87,column:4},end:{line:95,column:5}},"33":{start:{line:88,column:6},end:{line:90,column:9}},"34":{start:{line:92,column:6},end:{line:94,column:9}},"35":{start:{line:97,column:4},end:{line:99,column:7}},"36":{start:{line:104,column:0},end:{line:115,column:2}},"37":{start:{line:105,column:2},end:{line:114,column:5}},"38":{start:{line:109,column:4},end:{line:109,column:70}},"39":{start:{line:111,column:4},end:{line:113,column:7}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:17},end:{line:6,column:18}},loc:{start:{line:6,column:31},end:{line:28,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:25},end:{line:21,column:26}},loc:{start:{line:21,column:33},end:{line:23,column:3}},line:21},"2":{name:"(anonymous_2)",decl:{start:{line:23,column:11},end:{line:23,column:12}},loc:{start:{line:23,column:18},end:{line:27,column:3}},line:23},"3":{name:"(anonymous_3)",decl:{start:{line:31,column:18},end:{line:31,column:19}},loc:{start:{line:31,column:32},end:{line:42,column:1}},line:31},"4":{name:"(anonymous_4)",decl:{start:{line:35,column:42},end:{line:35,column:43}},loc:{start:{line:35,column:50},end:{line:37,column:3}},line:35},"5":{name:"(anonymous_5)",decl:{start:{line:37,column:11},end:{line:37,column:12}},loc:{start:{line:37,column:18},end:{line:41,column:3}},line:37},"6":{name:"(anonymous_6)",decl:{start:{line:45,column:18},end:{line:45,column:19}},loc:{start:{line:45,column:32},end:{line:55,column:1}},line:45},"7":{name:"(anonymous_7)",decl:{start:{line:48,column:25},end:{line:48,column:26}},loc:{start:{line:48,column:33},end:{line:50,column:3}},line:48},"8":{name:"(anonymous_8)",decl:{start:{line:50,column:11},end:{line:50,column:12}},loc:{start:{line:50,column:18},end:{line:54,column:3}},line:50},"9":{name:"(anonymous_9)",decl:{start:{line:58,column:17},end:{line:58,column:18}},loc:{start:{line:58,column:31},end:{line:78,column:1}},line:58},"10":{name:"(anonymous_10)",decl:{start:{line:63,column:10},end:{line:63,column:11}},loc:{start:{line:63,column:17},end:{line:73,column:3}},line:63},"11":{name:"(anonymous_11)",decl:{start:{line:73,column:11},end:{line:73,column:12}},loc:{start:{line:73,column:18},end:{line:77,column:3}},line:73},"12":{name:"(anonymous_12)",decl:{start:{line:81,column:17},end:{line:81,column:18}},loc:{start:{line:81,column:31},end:{line:101,column:1}},line:81},"13":{name:"(anonymous_13)",decl:{start:{line:86,column:10},end:{line:86,column:11}},loc:{start:{line:86,column:17},end:{line:96,column:3}},line:86},"14":{name:"(anonymous_14)",decl:{start:{line:96,column:11},end:{line:96,column:12}},loc:{start:{line:96,column:18},end:{line:100,column:3}},line:96},"15":{name:"(anonymous_15)",decl:{start:{line:104,column:20},end:{line:104,column:21}},loc:{start:{line:104,column:34},end:{line:115,column:1}},line:104},"16":{name:"(anonymous_16)",decl:{start:{line:108,column:10},end:{line:108,column:11}},loc:{start:{line:108,column:18},end:{line:110,column:3}},line:108},"17":{name:"(anonymous_17)",decl:{start:{line:110,column:11},end:{line:110,column:12}},loc:{start:{line:110,column:18},end:{line:114,column:3}},line:110}},branchMap:{"0":{loc:{start:{line:8,column:2},end:{line:13,column:3}},type:"if",locations:[{start:{line:8,column:2},end:{line:13,column:3}},{start:{line:8,column:2},end:{line:13,column:3}}],line:8},"1":{loc:{start:{line:25,column:15},end:{line:25,column:62}},type:"binary-expr",locations:[{start:{line:25,column:15},end:{line:25,column:26}},{start:{line:25,column:30},end:{line:25,column:62}}],line:25},"2":{loc:{start:{line:33,column:18},end:{line:33,column:69}},type:"cond-expr",locations:[{start:{line:33,column:25},end:{line:33,column:62}},{start:{line:33,column:65},end:{line:33,column:69}}],line:33},"3":{loc:{start:{line:39,column:15},end:{line:39,column:61}},type:"binary-expr",locations:[{start:{line:39,column:15},end:{line:39,column:26}},{start:{line:39,column:30},end:{line:39,column:61}}],line:39},"4":{loc:{start:{line:64,column:4},end:{line:72,column:5}},type:"if",locations:[{start:{line:64,column:4},end:{line:72,column:5}},{start:{line:64,column:4},end:{line:72,column:5}}],line:64},"5":{loc:{start:{line:87,column:4},end:{line:95,column:5}},type:"if",locations:[{start:{line:87,column:4},end:{line:95,column:5}},{start:{line:87,column:4},end:{line:95,column:5}}],line:87},"6":{loc:{start:{line:112,column:15},end:{line:112,column:77}},type:"binary-expr",locations:[{start:{line:112,column:15},end:{line:112,column:26}},{start:{line:112,column:30},end:{line:112,column:77}}],line:112}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},inputSourceMap:{version:3,sources:["foods.controller.js"],names:["db","require","Food","foods","Op","Sequelize","exports","create","req","res","body","name","status","send","message","food","then","data","catch","err","findAll","query","condition","iLike","where","findOne","id","findByPk","update","num","delete","destroy","deleteAll","truncate","nums"],mappings:"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",file:"foods.controller.js",sourceRoot:"/home/manuel/Desktop/ProyIntegral/app/controllers",sourcesContent:["const db = require(\"../models\");\nconst Food = db.foods;\nconst Op = db.Sequelize.Op;\n\n// Create and Save a new Food\nexports.create = (req, res) => {\n   // Validate request\n   if (!req.body.name ) {\n    res.status(400).send({\n      message: \"Content can not be empty!\"\n    });\n    return;\n  }\n\n  // Create a Food\n  const food = {\n    name: req.body.name,\n  };\n\n  // Save Food in the database\n  Food.create(food)\n    .then(data => {\n      res.send(data);\n    })\n    .catch(err => {\n      res.status(500).send({\n        message:\n          err.message || \"Error while creating new Food.\"\n      });\n    });\n};\n\n// Retrieve all Foods from the database.\nexports.findAll = (req, res) => {\n    const name = req.query.name;\n    var condition = name ? { name: { [Op.iLike]: `%${name}%` } } : null;\n  \n    Food.findAll({ where: condition })\n      .then(data => {\n        res.send(data);\n      })\n      .catch(err => {\n        res.status(500).send({\n          message:\n            err.message || \"Error while retrieving foods.\"\n        });\n      });\n};\n\n// Find a single food with an id\nexports.findOne = (req, res) => {\n    const id = req.body.id;\n\n    Food.findByPk(id)\n      .then(data => {\n        res.send(data);\n      })\n      .catch(err => {\n        res.status(500).send({\n          message: \"Error retrieving food with id=\" + id\n        });\n      });\n};\n\n// Update a Food by the id in the request\nexports.update = (req, res) => {\n    const id = req.body.id;\n\n    Food.update(req.body, {\n      where: { id: id }\n    })\n      .then(num => {\n        if (num == 1) {\n          res.send({\n            message: \"Food was updated successfully.\"\n          });\n        } else {\n          res.send({\n            message: `Cannot update Food with id=${id}. Maybe Food was not found or req.body is empty!`\n          });\n        }\n      })\n      .catch(err => {\n        res.status(500).send({\n          message: \"Error updating Food with id=\" + id\n        });\n      });\n};\n\n// Delete a Food with the specified id in the request\nexports.delete = (req, res) => {\n    const id = req.body.id;\n\n    Food.destroy({\n      where: { id: id }\n    })\n      .then(num => {\n        if (num == 1) {\n          res.send({\n            message: \"Food was deleted successfully!\"\n          });\n        } else {\n          res.send({\n            message: `Cannot delete Food with id=${id}. Maybe Food was not found!`\n          });\n        }\n      })\n      .catch(err => {\n        res.status(500).send({\n          message: \"Could not delete User with id=\" + id\n        });\n      });\n};\n\n// Delete all Foods from the database.\nexports.deleteAll = (req, res) => {\n    Food.destroy({\n        where: {},\n        truncate: false\n      })\n        .then(nums => {\n          res.send({ message: `${nums} Foods were deleted successfully!` });\n        })\n        .catch(err => {\n          res.status(500).send({\n            message:\n              err.message || \"Some error occurred while removing all Foods.\"\n          });\n        });\n};\n\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"cce17af6e8ae4a5e54681c7e0117830373cd094d"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1oswnuiqra=function(){return actualCoverage;};}return actualCoverage;}cov_1oswnuiqra();const db=(cov_1oswnuiqra().s[0]++,require("../models"));const Food=(cov_1oswnuiqra().s[1]++,db.foods);const Op=(cov_1oswnuiqra().s[2]++,db.Sequelize.Op);// Create and Save a new Food
cov_1oswnuiqra().s[3]++;exports.create=(req,res)=>{cov_1oswnuiqra().f[0]++;cov_1oswnuiqra().s[4]++;// Validate request
if(!req.body.name){cov_1oswnuiqra().b[0][0]++;cov_1oswnuiqra().s[5]++;res.status(400).send({message:"Content can not be empty!"});cov_1oswnuiqra().s[6]++;return;}else{cov_1oswnuiqra().b[0][1]++;}// Create a Food
const food=(cov_1oswnuiqra().s[7]++,{name:req.body.name});// Save Food in the database
cov_1oswnuiqra().s[8]++;Food.create(food).then(data=>{cov_1oswnuiqra().f[1]++;cov_1oswnuiqra().s[9]++;res.send(data);}).catch(err=>{cov_1oswnuiqra().f[2]++;cov_1oswnuiqra().s[10]++;res.status(500).send({message:(cov_1oswnuiqra().b[1][0]++,err.message)||(cov_1oswnuiqra().b[1][1]++,"Error while creating new Food.")});});};// Retrieve all Foods from the database.
cov_1oswnuiqra().s[11]++;exports.findAll=(req,res)=>{cov_1oswnuiqra().f[3]++;const name=(cov_1oswnuiqra().s[12]++,req.query.name);var condition=(cov_1oswnuiqra().s[13]++,name?(cov_1oswnuiqra().b[2][0]++,{name:{[Op.iLike]:`%${name}%`}}):(cov_1oswnuiqra().b[2][1]++,null));cov_1oswnuiqra().s[14]++;Food.findAll({where:condition}).then(data=>{cov_1oswnuiqra().f[4]++;cov_1oswnuiqra().s[15]++;res.send(data);}).catch(err=>{cov_1oswnuiqra().f[5]++;cov_1oswnuiqra().s[16]++;res.status(500).send({message:(cov_1oswnuiqra().b[3][0]++,err.message)||(cov_1oswnuiqra().b[3][1]++,"Error while retrieving foods.")});});};// Find a single food with an id
cov_1oswnuiqra().s[17]++;exports.findOne=(req,res)=>{cov_1oswnuiqra().f[6]++;const id=(cov_1oswnuiqra().s[18]++,req.body.id);cov_1oswnuiqra().s[19]++;Food.findByPk(id).then(data=>{cov_1oswnuiqra().f[7]++;cov_1oswnuiqra().s[20]++;res.send(data);}).catch(err=>{cov_1oswnuiqra().f[8]++;cov_1oswnuiqra().s[21]++;res.status(500).send({message:"Error retrieving food with id="+id});});};// Update a Food by the id in the request
cov_1oswnuiqra().s[22]++;exports.update=(req,res)=>{cov_1oswnuiqra().f[9]++;const id=(cov_1oswnuiqra().s[23]++,req.body.id);cov_1oswnuiqra().s[24]++;Food.update(req.body,{where:{id:id}}).then(num=>{cov_1oswnuiqra().f[10]++;cov_1oswnuiqra().s[25]++;if(num==1){cov_1oswnuiqra().b[4][0]++;cov_1oswnuiqra().s[26]++;res.send({message:"Food was updated successfully."});}else{cov_1oswnuiqra().b[4][1]++;cov_1oswnuiqra().s[27]++;res.send({message:`Cannot update Food with id=${id}. Maybe Food was not found or req.body is empty!`});}}).catch(err=>{cov_1oswnuiqra().f[11]++;cov_1oswnuiqra().s[28]++;res.status(500).send({message:"Error updating Food with id="+id});});};// Delete a Food with the specified id in the request
cov_1oswnuiqra().s[29]++;exports.delete=(req,res)=>{cov_1oswnuiqra().f[12]++;const id=(cov_1oswnuiqra().s[30]++,req.body.id);cov_1oswnuiqra().s[31]++;Food.destroy({where:{id:id}}).then(num=>{cov_1oswnuiqra().f[13]++;cov_1oswnuiqra().s[32]++;if(num==1){cov_1oswnuiqra().b[5][0]++;cov_1oswnuiqra().s[33]++;res.send({message:"Food was deleted successfully!"});}else{cov_1oswnuiqra().b[5][1]++;cov_1oswnuiqra().s[34]++;res.send({message:`Cannot delete Food with id=${id}. Maybe Food was not found!`});}}).catch(err=>{cov_1oswnuiqra().f[14]++;cov_1oswnuiqra().s[35]++;res.status(500).send({message:"Could not delete User with id="+id});});};// Delete all Foods from the database.
cov_1oswnuiqra().s[36]++;exports.deleteAll=(req,res)=>{cov_1oswnuiqra().f[15]++;cov_1oswnuiqra().s[37]++;Food.destroy({where:{},truncate:false}).then(nums=>{cov_1oswnuiqra().f[16]++;cov_1oswnuiqra().s[38]++;res.send({message:`${nums} Foods were deleted successfully!`});}).catch(err=>{cov_1oswnuiqra().f[17]++;cov_1oswnuiqra().s[39]++;res.status(500).send({message:(cov_1oswnuiqra().b[6][0]++,err.message)||(cov_1oswnuiqra().b[6][1]++,"Some error occurred while removing all Foods.")});});};//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,